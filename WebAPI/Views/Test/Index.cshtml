@model WebAPI.Models.ViewDetails
@{
    ViewBag.Title = "Track Details";
}
<link href="~/assets/vendor/cropper/cropper.css" rel="stylesheet" />
<style>
    .input form-control {
        height: 40px !important;
    }
    input.form-control {
        padding: 8px !important;
    }
</style>
<div class="container-fluid">
    <div class="block-header">
        <div class="row">
            <div class="col-lg-5 col-md-8 col-sm-12">
                <h2><a href="javascript:void(0);" class="btn btn-xs btn-link btn-toggle-fullwidth"><i class="fa fa-arrow-left"></i></a> Flight Tracker</h2>

            </div>
            <div class="col-lg-7 col-md-4 col-sm-12 text-right">
                <ul class="breadcrumb" style="float:right">
                    <li class="breadcrumb-item"><a href="@(Url.Action("Index","Home"))"><i class="icon-home"></i></a></li>
                    <li class="breadcrumb-item">Track Details</li>
                    <li class="breadcrumb-item active">Track Details</li>
                </ul>
            </div>
        </div>
    </div>
</div>

<div class="row clearfix">
    <div class="col-lg-12 col-md-12">
        <div class="card">
            <div class="body">
                @using (Html.BeginForm("SubmitData", "Test", FormMethod.Post, new { id = "validation-form_track" }))
                {
                    <div class="row clearfix">
                        <div class="col-lg-3 col-md-12">
                            <div class="mb-3">
                                <p> @Html.Label("Leaving From", htmlAttributes: new { @class = "control-label" })</p>

                                @Html.DropDownListFor(model => model.FromCountry,null, "Select...", new
                           {
                               @class = "form-control show-tick ms select2",
                               style = "width:100%",
                               @data_rel = "tooltip",
                               @placeholder = "From",
                               @title = "",
                               @data_placement = "top",
                               @data_original_title = "Leaving From",
                               @id = "FromCountry"
                           })

                                @Html.ValidationMessageFor(model => model.FromCountry)
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-12">
                            <div class="mb-3">
                                <p> @Html.Label("Going To", htmlAttributes: new { @class = "control-label" })</p>

                                @Html.DropDownListFor(model => model.ToCountry, null, "Select...",new
                               {
                                   @class = "form-control show-tick ms select2",
                                   style = "width:100%",
                                   @data_rel = "tooltip",
                                   @placeholder = "To",
                                   @title = "",
                                   @data_placement = "top",
                                   @data_original_title = "Going To",
                                   @id = "ToCountry"
                               })

                                @Html.ValidationMessageFor(model => model.ToCountry)
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-12">

                            <div class="form-group mb-3">
                                <b>Departing Date</b>
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="icon-calendar"></i></span>
                                </div>
                                <input name="DeptDate" id="DeptDate"
                                       data-provide="datepicker" data-date-autoclose="true" data-date-format="dd/mm/yyyy" placeholder="dd/mm/yyyy" class="form-control date">
                            </div>
                        </div>

                    </div>

                    <div class="row clearfix">
                        <div class="col-lg-12 col-md-12">
                            <div class="mb-3">
                                <div class="input-group-prepend">
                                    <button id="btnView" type="button" class="btn btn-danger">
                                        <i class="fa fa-plane"></i>
                                        <span id="SpanBtnScan">View Flights</span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row clearfix">
                        <div class="col-lg-12 col-md-12">
                            <div id="flightDetails"></div>
                        </div>
                    </div>

                }

            </div>
        </div>
    </div>
</div>

@section styles{

    <link rel="stylesheet" href="~/assets/vendor/select2/select2.css" />
    <link rel="stylesheet" href="~/assets/vendor/bootstrap-datepicker/css/bootstrap-datepicker3.min.css">
    <link rel="stylesheet" href="~/assets/vendor/bootstrap-multiselect/bootstrap-multiselect.css">
}

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/assets/vendor/fullcalendar/moment.min.js"></script>
    <script src="~/assets/vendor/select2/select2.min.js"></script>
    <script src="~/assets/vendor/bootstrap-multiselect/bootstrap-multiselect.js"></script>
    <script src="~/assets/vendor/bootstrap-datepicker/js/bootstrap-datepicker.min.js"></script>

    @*<script>
            window.Parsley
                .addValidator('departingDate', {
                    requirementType: 'string',
                    validateString: function (value, requirement) {


                        var selectedDate = moment(value, "DD/MM/YYYY");
                        var currentDate = new Date();
                        currentDate.setHours(0, 0, 0, 0)

                        if (selectedDate >= currentDate) {
                            console.log("current date or greater")
                            return true;
                        }

                        else {
                            console.log("date is lesser")
                            return false
                        }
                    },
                    messages: {
                        en: 'Departing Date should not be a past date',
                    }
                });
        </script>*@
    <script type="text/javascript">

        var message = "@TempData["success"]";
        var errormessage = "@TempData["error"]";

        toastr.options.positionClass = 'toast-top-center';
        toastr.options.timeOut = 2000


        var currentDate = new Date();
        currentDate.setDate(currentDate.getDate());//any date you want
        $("#DeptDate").datepicker('setDate', currentDate);

        $('#btnView').on('click', function (e) {
            debugger
            var deptDate = $('#DeptDate').val();
            if (deptDate == null) {
                e.preventDefault();
                toastr['error']('Please select the date.');
            }

            if (!($('#FromCountry').val())) {
                e.preventDefault();
                toastr['error']('Please select From airport.');
            }
            else if (!($('#ToCountry').val())) {
                e.preventDefault();
                toastr['error']('Please select To airport.');
            }
            var fromLoc = $('#FromCountry').val();
            var fromCountry = $('#FromCountry option:selected').text();
            
            var toLoc = $('#ToCountry').val();
            var toCountry = $('#ToCountry option:selected').text();

            if (fromLoc == toLoc) {
                e.preventDefault();
                toastr['error']('Please select different source and destination airports.');
            }
            $.ajax({

                url: '@Url.Action("getFlightData", "Test")',
                data: {
                    'from': fromLoc,
                    'to': toLoc,
                    'date': deptDate,
                    'fromCountry': fromCountry,
                    'toCountry': toCountry
                },
                type:'POST',
                success: function (data) {
                    debugger
                    if (data) {
                        $('#flightDetails').empty().html(data);
                    }
                    else {
                        toastr.options.positionClass = 'toast-top-center';
                        toastr.options.timeOut = 2000
                        toastr['error'](data.Message);
                    }
                },

            });
        });

        $(document).ready(function () {
            $('.btn-toggle-fullwidth').trigger('click');
            $(document).ready(function () {
            });
        });
    </script>
}
